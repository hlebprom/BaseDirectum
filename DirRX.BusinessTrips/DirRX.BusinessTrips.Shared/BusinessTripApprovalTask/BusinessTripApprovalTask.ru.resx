<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TripDatesErrorText" xml:space="preserve">
    <value>Дата окончания должна быть больше или равна дате начала командировки.</value>
  </data>
  <data name="TaskSubjectTemplate" xml:space="preserve">
    <value>Согласование командировки сотрудника: {0}</value>
  </data>
  <data name="TaskThemeBase" xml:space="preserve">
    <value>&lt;Тема задачи изменится автоматически&gt;</value>
  </data>
  <data name="TaskTextTemplate" xml:space="preserve">
    <value>Командируемый: {0}
Цель командировки: {1}</value>
  </data>
  <data name="ReWorkAssignmentSubjectTemplate" xml:space="preserve">
    <value>Скорректируйте параметры командировки: {0}–{1}. Цель: {2}</value>
  </data>
  <data name="SignOrderSubjectTemplate" xml:space="preserve">
    <value>Подпишите приказ о направлении в командировку сотрудника: {0}</value>
  </data>
  <data name="ApprovalAssignmentSubjectTemplate" xml:space="preserve">
    <value>Согласуйте параметры командировки сотрудника: {0}</value>
  </data>
  <data name="TransferMoneySubjectTemplate" xml:space="preserve">
    <value>Перечислите деньги на командировку сотрудника: {0}</value>
  </data>
  <data name="TransferMoneyNoticeSubjectTemplate" xml:space="preserve">
    <value>Перечислены деньги на командировку: {0}–{1}. Цель: {2}</value>
  </data>
  <data name="ProcessDocumentsSubjectTemplate" xml:space="preserve">
    <value>Ознакомьтесь и подпишите приказ о направлении в командировку: {0}</value>
  </data>
  <data name="TiketsNoticeSubjectTemplate" xml:space="preserve">
    <value>Приобретены билеты в командировку: {0}–{1}. Цель: {2}</value>
  </data>
  <data name="BuyTiketsSubjectTemplate" xml:space="preserve">
    <value>Купите билеты для командировки сотрудника: {0}</value>
  </data>
  <data name="Reason" xml:space="preserve">
    <value>Причина</value>
  </data>
  <data name="ByCarTextTemplate" xml:space="preserve">
    <value>{0}

Оформлена служебная записка о поездке на личном транспорте.
Марка: {1}
Номер: {2}</value>
  </data>
  <data name="ByCarMemoInfo" xml:space="preserve">
    <value>После отправки задачи будет сформирована служебная записка о поездке на личном транспорте.</value>
  </data>
  <data name="ProcessDocumentsWithMemoSubjectTemplate" xml:space="preserve">
    <value>Ознакомьтесь и подпишите приказ о направлении в командировку и служебную записку: {0}</value>
  </data>
  <data name="ExpenseReportPurpose" xml:space="preserve">
    <value>Командировочные расходы</value>
  </data>
  <data name="CancelConfirmation" xml:space="preserve">
    <value>Отмена командировки</value>
  </data>
  <data name="EmptyCancelReason" xml:space="preserve">
    <value>Укажите причину отмены командировки.</value>
  </data>
  <data name="TripCancelSuccessfully" xml:space="preserve">
    <value>Отправлена задача для отмены командировки.</value>
  </data>
  <data name="ProcessChangeDocumentsSubjectTemplate" xml:space="preserve">
    <value>Ознакомьтесь и подпишите приказы о направлении в командировку и об изменении командировки: {0}</value>
  </data>
  <data name="ProcessChangeDocumentsWithMemoSubjectTemplate" xml:space="preserve">
    <value>Ознакомьтесь и подпишите приказы о направлении в командировку, об изменении командировки и служебную записку: {0}</value>
  </data>
  <data name="ChangeTransferMoneySubjectTemplate" xml:space="preserve">
    <value>Перечислите дополнительные деньги на командировку сотрудника: {0}</value>
  </data>
  <data name="ChangeBuyTiketsSubjectTemplate" xml:space="preserve">
    <value>Поменяйте билеты для командировки сотрудника {0} после изменения ее параметров</value>
  </data>
  <data name="SignChangeOrderSubjectTemplate" xml:space="preserve">
    <value>Подпишите приказ об изменении командировки сотрудника: {0}</value>
  </data>
  <data name="TripChangelTooLate" xml:space="preserve">
    <value>Изменение доступно только до окончания командировки.</value>
  </data>
  <data name="TripChangeNoProcessOwner" xml:space="preserve">
    <value>Только инициатор может изменить командировку.</value>
  </data>
  <data name="TripChangeAlreadyStarted" xml:space="preserve">
    <value>Изменение командировки уже запущено.</value>
  </data>
  <data name="PrepareExpenseReportSubjectTemplate" xml:space="preserve">
    <value>Подготовьте авансовый отчет №{0} от {1} за {2}</value>
  </data>
  <data name="ChangeConfirmation" xml:space="preserve">
    <value>Изменение командировки</value>
  </data>
  <data name="EmptyChangeReason" xml:space="preserve">
    <value>Укажите причину изменения командировки.</value>
  </data>
  <data name="TripChangeSuccessfully" xml:space="preserve">
    <value>Командировка отправлена на доработку.</value>
  </data>
  <data name="ChangeApprovalAssignmentSubjectTemplate" xml:space="preserve">
    <value>Согласуйте измененные параметры командировки сотрудника: {0}</value>
  </data>
  <data name="ChangeReasonToTextTemplate" xml:space="preserve">
    <value>{0}

Командировка изменена. Причина: {1}</value>
  </data>
  <data name="TripCancelEmployeeOrManagerCanDo" xml:space="preserve">
    <value>Отмена доступна только для командируемого сотрудника и его руководителя.</value>
  </data>
  <data name="TripCancelAlredyInitialized" xml:space="preserve">
    <value>Отмена командировки уже инициирована.</value>
  </data>
  <data name="TripCancelTooLate" xml:space="preserve">
    <value>Отмена доступна только до окончания командировки.</value>
  </data>
  <data name="RouteDateInMoreThenDateOutError" xml:space="preserve">
    <value>Дата прибытия не может быть больше даты отъезда.</value>
  </data>
  <data name="TripDepartureDateTooLateError" xml:space="preserve">
    <value>Дата начала командировки должна быть меньше или равна дате прибытия в пункт назначения.</value>
  </data>
  <data name="TripReturnDateTooEarlyError" xml:space="preserve">
    <value>Дата окончания командировки должна быть больше или равна дате отъезда из пункта назначения.</value>
  </data>
  <data name="SubzeroError" xml:space="preserve">
    <value>Значение должно быть положительным.</value>
  </data>
  <data name="HowToFillExpenseReportNotificationText" xml:space="preserve">
    <value>Для автоматического заполнения авансового отчета отправьте подтверждающие документы на служебный почтовый ящик {0}. 
Используйте для отправки рабочую почту. 
Для включения в отчет можно прислать фотографии, скан-копии или электронные версии документов. 
При наличии бумажных экземпляров документов сохраните их для передачи в бухгалтерию.</value>
  </data>
  <data name="ExpenseReportNoticeJobNoticeSubject" xml:space="preserve">
    <value>Доступно заполнение авансового отчета по командировке {0}–{1}. Цель: {2}</value>
  </data>
  <data name="AddPerDiemErrorTextNoTripDates" xml:space="preserve">
    <value>Не заполнены даты командировки.</value>
  </data>
  <data name="AddPerDiemErrorTextNoRoute" xml:space="preserve">
    <value>Не заполнен маршрут командировки.</value>
  </data>
  <data name="AddPerDiemErrorTextNoRouteProperties" xml:space="preserve">
    <value>Не заполнены обязательные свойства в маршруте командировки.</value>
  </data>
  <data name="AddPerDiemInfoNoSettings" xml:space="preserve">
    <value>Не для всех городов или типов расходов найдены подходящие настройки лимитов.</value>
  </data>
  <data name="AddPerDiemInfoNotForOneDayTrip" xml:space="preserve">
    <value>За командировку продолжительностью в 1 день не начисляются суточные и не оплачивается проживание.</value>
  </data>
</root>